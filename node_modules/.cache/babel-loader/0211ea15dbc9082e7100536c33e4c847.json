{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Documents/Dev/resource-game/src/components/Resource.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport MachineList from './MachineList';\nimport { StoneContext, FoodContext, WoodContext } from './MyContexts.js';\n\nconst Resource = ({\n  name,\n  resource,\n  color\n}) => {\n  const [stock, setStock] = useState(8);\n  React.useEffect(() => {\n    localStorage.setItem('stock', stock);\n  });\n  /*mining = (amount) => {\n    setInterval(() => {\n      setStock(stock + amount);\n    }, 1000);\n  }*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resource-frag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"resource-btn\",\n    variant: color,\n    onClick: () => setStock(stock + 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, name, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-light stock-badge\",\n    id: \"stone-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, stock)), /*#__PURE__*/React.createElement(StoneContext.Provider, {\n    value: stock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MachineList, {\n    type: resource,\n    stock: stock,\n    setStock: setStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Resource;","map":{"version":3,"sources":["/home/lucas/Documents/Dev/resource-game/src/components/Resource.js"],"names":["React","useState","useEffect","Button","MachineList","StoneContext","FoodContext","WoodContext","Resource","name","resource","color","stock","setStock","localStorage","setItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,WAAnC,QAAqD,iBAArD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAE5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBY,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACD,GAFD;AAKA;;;;;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAED,KAA1C;AAAiD,IAAA,OAAO,EAAE,MAAME,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IADL,eAEI;AAAM,IAAA,SAAS,EAAC,+BAAhB;AAAgD,IAAA,EAAE,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiEG,KAAjE,CAFJ,CADF,eAME,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEF,QAAnB;AAA6B,IAAA,KAAK,EAAEE,KAApC;AAA2C,IAAA,QAAQ,EAAEC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAaD,CA5BD;;AA8BA,eAAeL,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport MachineList from './MachineList';\nimport {StoneContext, FoodContext, WoodContext} from './MyContexts.js'\n\nconst Resource = ({name, resource, color}) => {\n\n  const [stock, setStock] = useState(8);\n\n  React.useEffect(() => {\n    localStorage.setItem('stock', stock);\n  });\n\n\n  /*mining = (amount) => {\n    setInterval(() => {\n      setStock(stock + amount);\n    }, 1000);\n  }*/\n\n  return (\n    <div className=\"resource-frag\">\n      <Button className='resource-btn' variant={color} onClick={() => setStock(stock + 10)}>\n          {name}\n          <span className=\"badge badge-light stock-badge\" id=\"stone-span\">{stock}</span>\n      </Button>\n\n      <StoneContext.Provider value={stock}>\n        <MachineList type={resource} stock={stock} setStock={setStock}/>\n      </StoneContext.Provider>\n    </div>\n  )\n\n}\n\nexport default Resource;\n"]},"metadata":{},"sourceType":"module"}